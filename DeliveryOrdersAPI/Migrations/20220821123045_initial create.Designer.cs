// <auto-generated />
using System;
using DeliveryOrdersAPI.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DeliveryOrdersAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220821123045_initial create")]
    partial class initialcreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DeliveryOrdersAPI.Models.DeliveryOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CargoWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DatePickup")
                        .HasColumnType("datetime2");

                    b.Property<long>("OrderNum")
                        .HasColumnType("bigint");

                    b.Property<string>("RecipientAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecipientCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DeliveryOrders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("63dc8fa6-07ae-4391-8916-e057f71239ce"),
                            CargoWeight = 10.5m,
                            DatePickup = new DateTime(2022, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderNum = 1L,
                            RecipientAddress = "Улица им.Колотушкина 56, кв 36",
                            RecipientCity = "Москва",
                            SenderAddress = "Улица им.Пушкина 36, кв 5",
                            SenderCity = "Санкт-Петербург"
                        },
                        new
                        {
                            Id = new Guid("70bf165a-700a-4156-91c0-e83fce0a277f"),
                            CargoWeight = 3.5m,
                            DatePickup = new DateTime(2022, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderNum = 2L,
                            RecipientAddress = "Улица Ленина 65, кв 23",
                            RecipientCity = "Омск",
                            SenderAddress = "Улица Баныкина 31, кв 65",
                            SenderCity = "Тольятти"
                        },
                        new
                        {
                            Id = new Guid("4aa76a4c-c59d-409a-84c1-06e6487a137a"),
                            CargoWeight = 5.3m,
                            DatePickup = new DateTime(2022, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderNum = 3L,
                            RecipientAddress = "Улица Рождественская 15, кв 7",
                            RecipientCity = "Нижний Новгород",
                            SenderAddress = "Улица Куйбышева 5, кв 51",
                            SenderCity = "Самара"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
